/*
Deployment script for gpstracker

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "gpstracker"
:setvar DefaultFilePrefix "gpstracker"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[gpslocations]...';


GO
CREATE TABLE [dbo].[gpslocations] (
    [GPSLocationID]  INT             IDENTITY (1, 1) NOT NULL,
    [lastUpdate]     DATETIME        NOT NULL,
    [latitude]       DECIMAL (10, 7) NOT NULL,
    [longitude]      DECIMAL (10, 7) NOT NULL,
    [phoneNumber]    NVARCHAR (50)   NOT NULL,
    [userName]       NVARCHAR (50)   NOT NULL,
    [sessionID]      NVARCHAR (50)   NOT NULL,
    [speed]          INT             NOT NULL,
    [direction]      INT             NOT NULL,
    [distance]       DECIMAL (10, 1) NOT NULL,
    [gpsTime]        DATETIME        NOT NULL,
    [locationMethod] NVARCHAR (100)  NOT NULL,
    [accuracy]       INT             NOT NULL,
    [eventType]      NVARCHAR (50)   NOT NULL,
    [extraInfo]      NVARCHAR (255)  NOT NULL,
    CONSTRAINT [PK_gpslocations] PRIMARY KEY CLUSTERED ([GPSLocationID] ASC)
);


GO
PRINT N'Creating [dbo].[DF_gpslocations_LastUpdate]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_LastUpdate] DEFAULT (getdate()) FOR [lastUpdate];


GO
PRINT N'Creating [dbo].[DF_gpslocations_latitude]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_latitude] DEFAULT ((0.0)) FOR [latitude];


GO
PRINT N'Creating [dbo].[DF_gpslocations_longitude]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_longitude] DEFAULT ((0.0)) FOR [longitude];


GO
PRINT N'Creating [dbo].[DF_gpslocations_phoneNumber]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_phoneNumber] DEFAULT ('') FOR [phoneNumber];


GO
PRINT N'Creating [dbo].[DF_gpslocations_userName]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_userName] DEFAULT ('') FOR [userName];


GO
PRINT N'Creating [dbo].[DF_gpslocations_sessionID]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_sessionID] DEFAULT ('') FOR [sessionID];


GO
PRINT N'Creating [dbo].[DF_gpslocations_speed]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_speed] DEFAULT ((0)) FOR [speed];


GO
PRINT N'Creating [dbo].[DF_gpslocations_direction]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_direction] DEFAULT ((0)) FOR [direction];


GO
PRINT N'Creating [dbo].[DF_gpslocations_distance]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_distance] DEFAULT ((0.0)) FOR [distance];


GO
PRINT N'Creating [dbo].[DF_gpslocations_gpsTime]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_gpsTime] DEFAULT ('1900-01-01 00:00:00.000') FOR [gpsTime];


GO
PRINT N'Creating [dbo].[DF_gpslocations_locationMethod]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_locationMethod] DEFAULT ('') FOR [locationMethod];


GO
PRINT N'Creating [dbo].[DF_gpslocations_accuracy]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_accuracy] DEFAULT ((0)) FOR [accuracy];


GO
PRINT N'Creating [dbo].[DF_gpslocations_eventType]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_eventType] DEFAULT ('') FOR [eventType];


GO
PRINT N'Creating [dbo].[DF_gpslocations_extraInfo]...';


GO
ALTER TABLE [dbo].[gpslocations]
    ADD CONSTRAINT [DF_gpslocations_extraInfo] DEFAULT ('') FOR [extraInfo];


GO
PRINT N'Creating [dbo].[prcDeleteRoute]...';


GO
CREATE PROCEDURE [dbo].[prcDeleteRoute]
@sessionID NVARCHAR(50)
AS

SET NOCOUNT ON

DELETE FROM gpslocations
WHERE sessionID = @sessionID
GO
PRINT N'Creating [dbo].[prcGetAllRoutesForMap]...';


GO
CREATE PROCEDURE [dbo].[prcGetAllRoutesForMap]
AS

SET NOCOUNT ON

SELECT  
'{ "latitude": "' + CAST(latitude AS NVARCHAR(15)) 
+ '", "longitude": "' + CAST(longitude AS NVARCHAR(15)) 
+ '", "speed": "' + CAST(speed AS NVARCHAR(4)) 
+ '", "direction": "' + CAST(direction AS NVARCHAR(3)) 
+ '", "distance": "' + CAST(distance AS NVARCHAR(5)) 
+ '", "locationMethod": "' + locationMethod
+ '", "gpsTime": "' + CONVERT(NVARCHAR(25), gpsTime, 100)
+ '", "phoneNumber": "' + phoneNumber
+ '", "userName": "' + userName
+ '", "sessionID": "' + sessionID
+ '", "accuracy": "' + CAST(accuracy AS NVARCHAR(4)) 
+ '", "eventType": "' + eventType
+ '", "extrainfo": "' + extraInfo + '" }' json
FROM (SELECT MAX(GPSLocationID) ID
      FROM gpslocations
      WHERE sessionID != '0'
      GROUP BY sessionID) AS MaxID
JOIN gpslocations ON gpslocations.GPSLocationID = MaxID.ID
ORDER BY gpsTime
GO
PRINT N'Creating [dbo].[prcGetRouteForMap]...';


GO
CREATE PROCEDURE [dbo].[prcGetRouteForMap]
@sessionID NVARCHAR(50)
AS

SET NOCOUNT ON

SELECT '{ "latitude": "' + CAST(latitude AS NVARCHAR(15)) 
+ '", "longitude": "' + CAST(longitude AS NVARCHAR(15)) 
+ '", "speed": "' + CAST(speed AS NVARCHAR(4)) 
+ '", "direction": "' + CAST(direction AS NVARCHAR(3)) 
+ '", "distance": "' + CAST(distance AS NVARCHAR(5)) 
+ '", "locationMethod": "' + locationMethod
+ '", "gpsTime": "' + CONVERT(NVARCHAR(50), gpsTime, 100)
+ '", "phoneNumber": "' + phoneNumber
+ '", "userName": "' + userName
+ '", "sessionID": "' + sessionID
+ '", "accuracy": "' + CAST(accuracy AS NVARCHAR(4)) 
+ '", "eventType": "' + eventType
+ '", "extrainfo": "' + extraInfo + '" }' json
  FROM gpslocations
	WHERE sessionID = @sessionID
	ORDER BY lastupdate
GO
PRINT N'Creating [dbo].[prcGetRoutes]...';


GO
CREATE PROCEDURE [dbo].[prcGetRoutes]
AS

SET NOCOUNT ON

CREATE TABLE #tempRoutes 
( 
    sessionID NVARCHAR(50) NULL, 
    userName NVARCHAR(50) NULL, 
    startTime DATETIME NULL,
	endTime DATETIME NULL 
)

-- get the distinct routes
INSERT #tempRoutes (sessionID, userName)
SELECT DISTINCT sessionID, userName
FROM gpslocations

-- get the route start times
UPDATE #tempRoutes
SET startTime = (SELECT MIN(gpsTime) FROM gpslocations gl
WHERE gl.sessionID = tr.sessionID
AND gl.userName = tr.userName)
FROM #tempRoutes tr

-- get the route end times
UPDATE #tempRoutes
SET endTime = (SELECT MAX(gpsTime) FROM gpslocations gl
WHERE gl.sessionID = tr.sessionID
AND gl.userName = tr.userName)
FROM #tempRoutes tr

-- format dates and then send it out as json

SELECT '{ "sessionID": "' + CAST(sessionID AS NVARCHAR(50)) 
+ '", "userName": "' + userName
+  '", "times": "(' + CONVERT(NVARCHAR(25), startTime, 100) 
+ ' - ' + CONVERT(NVARCHAR(25), endTime, 100) + ')" }' json
FROM #tempRoutes
ORDER BY startTime DESC

DROP TABLE #tempRoutes
GO
PRINT N'Creating [dbo].[prcSaveGpsLocation]...';


GO
CREATE PROCEDURE [dbo].[prcSaveGpsLocation]
@latitude          DECIMAL(10,7),
@longitude         DECIMAL(10,7),
@speed             INT,
@direction         INT,
@distance          DECIMAL(10,1),
@date              DATETIME,
@locationMethod    NVARCHAR(100),
@phoneNumber	   NVARCHAR(50),
@userName		   NVARCHAR(50),
@sessionID		   NVARCHAR(50),
@accuracy		   INT,
@eventType         NVARCHAR(50),
@extraInfo		   NVARCHAR(255)

AS

SET NOCOUNT ON
  INSERT INTO gpslocations (Latitude, Longitude, speed, direction, distance, gpsTime, locationMethod,
                            phoneNumber, userName,  sessionID, accuracy, eventType, extraInfo)
  VALUES (@latitude, @longitude, @speed, @direction, @distance, @date, @locationMethod, 
					@phoneNumber, @userName, @sessionID, @accuracy, @eventType, @extraInfo)

  SELECT CAST(GetDate() AS NVARCHAR(50))
GO
PRINT N'Update complete.';


GO
